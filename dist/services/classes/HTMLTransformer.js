import t,{Element as e,Text as a}from"domhandler";import{Parser as s}from"htmlparser2";import{createElement as r,Fragment as l}from"react";import o from"style-to-js";export class HTMLTransformer{static createDefault(){let t=new HTMLTransformer;return t.allowAttributes(["style","class"]),t.allowTag("a",["href","target"]),t.allowTag("img",["src","alt"]),t.allowTag("video",["src"]),t.allowTag("iframe",["src"]),t.allowTag("th",["colspan","rowspan"]),t.allowTag("td",["colspan","rowspan"]),t.allowTags(["h1","h2","h3","h4","h5","h6","p","span","div","blockquote","pre","code","strong","em","u","small","figure","figcaption","ul","ol","li","br","table","thead","tbody","tfoot","tr","hr","sub","sup"]),t}allowTag(t,e){let a=this.tags.get(t);if(a){if(void 0!==e)for(let t of e)a.add(t)}else this.tags.set(t,new Set(e))}allowTags(t){for(let e of t)this.allowTag(e)}allowAttributes(t){for(let e of t)this.attributes.add(e)}setTextReplacer(t){this.textReplacement=t}setTagReplacer(t,e){this.allowTag(t),this.tagsReplacements.set(t,e)}transform(e){let a=new t,r=new s(a);return r.write(e),r.end(),this.processChildren(a.dom)}processChild(t){if(t instanceof a)return this.textReplacement?.(t.data)??t.data;if(t instanceof e){let e=this.tagsReplacements.get(t.tagName);if(e)return e({...t.attribs,children:this.processChildren(t.children)});if(!this.tags.has(t.tagName))return null;let a={};for(let[e,s]of Object.entries(t.attribs))(this.attributes.has(e)||this.tags.get(t.tagName)?.has(e)===!0)&&("style"===e?a.style=o(s,{reactCompat:!0}):"class"===e?a.className=s:a[e]=s);return r(t.tagName,a,0===t.children.length?null:this.processChildren(t.children))}return null}processChildren(t){return t.map((t,e)=>r(l,{key:e},this.processChild(t)))}constructor(){this.attributes=new Set,this.tags=new Map,this.tagsReplacements=new Map}}