import t,{Element as e,Text as s}from"domhandler";import{Parser as a}from"htmlparser2";import{createElement as r,Fragment as l}from"react";import o from"style-to-js";export class HTMLTransformer{static createDefault(){let t=new HTMLTransformer;return t.allowAttributes(["style","class"]),t.allowTag("a",["href","target"]),t.allowTag("img",["src","alt"]),t.allowTag("video",["src"]),t.allowTag("iframe",["src"]),t.allowTag("th",["colspan","rowspan"]),t.allowTag("td",["colspan","rowspan"]),t.allowTags(["h1","h2","h3","h4","h5","h6","p","span","div","blockquote","pre","code","strong","em","u","small","figure","figcaption","ul","ol","li","br","table","thead","tbody","tfoot","tr","hr","sub","sup"]),t}allowTag(t,e){let s=this.tags.get(t);if(s){if(void 0!==e)for(let t of e)s.add(t)}else this.tags.set(t,new Set(e))}allowTags(t){for(let e of t)this.allowTag(e)}allowAttributes(t){for(let e of t)this.attributes.add(e)}setTextReplacer(t){this.textReplacement=t}setTagReplacer(t,e){this.allowTag(t),this.tagsReplacements.set(t,e)}transform(e){let s=new t,r=new a(s);return r.write(e),r.end(),this.processChildren(s.dom)}processAttributes(t){let e={};for(let[s,a]of Object.entries(t.attribs))(this.attributes.has(s)||this.tags.get(t.tagName)?.has(s)===!0)&&("style"===s?e.style=o(a,{reactCompat:!0}):"class"===s?e.className=a:e[s]=a);return e}processChild(t){if(t instanceof s)return this.textReplacement?.(t.data)??t.data;if(t instanceof e){let e=this.tagsReplacements.get(t.tagName);return e?e({...this.processAttributes(t),children:this.processChildren(t.children)}):this.tags.has(t.tagName)?r(t.tagName,this.processAttributes(t),0===t.children.length?null:this.processChildren(t.children)):null}return null}processChildren(t){return t.map((t,e)=>r(l,{key:e},this.processChild(t)))}constructor(){this.attributes=new Set,this.tags=new Map,this.tagsReplacements=new Map}}